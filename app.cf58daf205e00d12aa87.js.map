{"version":3,"sources":["webpack:///./contexts/FileContext.js","webpack:///./processors/Edoc.js","webpack:///./components/DropZone.js","webpack:///./providers/FileProvider.js","webpack:///./components/FileView.js","webpack:///./app.js","webpack:///./components/style.css?f071"],"names":["React","createContext","files","Edoc","cx","classNames","bind","styles","DropZone","onDrop","useCallback","acceptedFiles","forEach","file","addFile","isDragAccept","isDragReject","isDragActive","getRootProps","getInputProps","useDropzone","multiple","accept","Object","values","Processors","map","p","MIME","useContext","FileContext","dragClass","className","FileProvider","Component","constructor","props","super","this","onAddFile","buffer","zip","JSZip","loadAsync","f","content","async","elem","window","document","createElement","bl","File","Response","arrayBuffer","name","href","URL","createObjectURL","download","body","appendChild","click","removeChild","state","setState","assign","stage","reader","FileReader","onabort","console","log","onerror","onload","buf","result","getZip","readAsBinaryString","render","Provider","value","children","FileView","Consumer","contextType","App","ReactDOM","getElementById","module","exports"],"mappings":"6MAEeA,MAAMC,cAAc,CAC/BC,MAAO,KCHI,MAAMC,G,EACH,mC,cADGA,G,gTCOrB,MAAMC,EAAKC,IAAWC,KAAKC,GAEZ,SAASC,IACpB,MAAMC,EAASC,sBAAYC,IACvBA,EAAcC,QAAQC,GAAQC,EAAQD,KACvC,KAEG,aAACE,EAAD,aAAeC,EAAf,aAA6BC,EAA7B,aAA2CC,EAA3C,cAAyDC,GAAiBC,YAAY,CACxFX,SACAY,UAAU,EACVC,OAAQC,OAAOC,OAAOC,GAAYC,IAAIC,GAAKA,EAAEC,SAG3C,QAACd,GAAWe,qBAAWC,GAEvBC,EAAY3B,EAAG,CACjB,SAAW,EACX,cAAiBa,EACjB,iBAAoBD,IAGxB,OACI,6BAASE,IAAT,CAAyBc,UAAWD,IAChC,0BAAWZ,KAETJ,IAAiBC,GAAkB,oDACpCA,GAAiB,mDAChBC,GAAiB,wD,WC9BhB,MAAMgB,UAAqBjC,IAAMkC,UAC5CC,YAAYC,GACRC,MAAMD,G,6GADS,cAMX,CACJlC,MAAO,KAJPoC,KAAKC,UAAYD,KAAKC,UAAUjC,KAAKgC,MAOzC,aAAazB,EAAM2B,GACf,MAAMC,EAAM,IAAIC,QACVD,EAAIE,UAAUH,GACpB,MAAMtC,EAAQuC,EAAI5B,KAAK,sCAEvB,IAAK,MAAM+B,KAAK1C,EAAO,CACnB,MAAM2C,QAAgBD,EAAEE,MAAM,UAIxBC,EAAOC,OAAOC,SAASC,cAAc,KACrCC,EAAK,IAAIC,KAAK,OAAO,IAAIC,SAASR,GAASS,eAAgBV,EAAEW,MACnER,EAAKS,KAAOR,OAAOS,IAAIC,gBAAgBP,GACvCJ,EAAKY,SAAWf,EAAEW,KAClBN,SAASW,KAAKC,YAAYd,GAC1BA,EAAKe,QACLb,SAASW,KAAKG,YAAYhB,GAE1BT,KAAK0B,MAAM9D,MAAMW,EAAK0C,MAAMrD,MAAQ,CAChCW,KAAM+B,EAAEW,KACRC,KAAMR,OAAOS,IAAIC,gBAAgBP,KAK7CZ,UAAU1B,GACNyB,KAAK2B,SAAS,CAEV/D,MAAOqB,OAAO2C,OAAO5B,KAAK0B,MAAM9D,MAAO,CAAC,CAACW,EAAK0C,MAAOhC,OAAO2C,OAAOrD,EAAM,CAACsD,MAAO,sBAGrF,MAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,IAAMC,QAAQC,IAAI,4BACnCJ,EAAOK,QAAU,IAAMF,QAAQC,IAAI,2BACnCJ,EAAOM,OAAS5B,UACZ,MAAM6B,EAAMP,EAAOQ,OACnBL,QAAQC,IAAI,uBACNlC,KAAKuC,OAAOhE,EAAM8D,GAExBrC,KAAK2B,SAAS,CACV/D,MAAOqB,OAAO2C,OAAO5B,KAAK0B,MAAM9D,MAAO,CAAC,CAACW,EAAK0C,MAAOhC,OAAO2C,OAAOrD,EAAM,CAACsD,MAAO,cAIzFC,EAAOU,mBAAmBjE,GAG9BkE,SACI,OACI,kBAACjD,EAAYkD,SAAb,CACIC,MAAO,CACH/E,MAAOoC,KAAK0B,MAAM9D,MAClBY,QAASwB,KAAKC,YAGjBD,KAAKF,MAAM8C,WCpEb,MAAMC,UAAiBnF,IAAMkC,UAWxC6C,SACI,OACI,kBAACjD,EAAYsD,SAAb,KACK,EAAElF,WAEC,gCAOpBiF,EAASE,YAAcvD,ECpBvB,MAAMwD,EAAM,IACR,gBAAC,EAAD,KACI,gBAAC,EAAD,MACA,gBAAC9E,EAAD,OAIR+E,SACI,gBAACD,EAAD,MAASrC,SAASuC,eAAe,U,kBCbrCC,EAAOC,QAAU,CAAC,QAAU,SAAS,cAAgB,SAAS,iBAAmB,W","file":"app.cf58daf205e00d12aa87.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    files: []\n});","export default class Edoc {\n    static MIME = \"application/vnd.etsi.asic-e+zip\"\n}","import React, {useCallback, useContext} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport classNames from 'classnames/bind';\nimport FileContext from '../contexts/FileContext';\nimport * as Processors from \"../processors\";\n\nimport * as styles from './style.css';\nconst cx = classNames.bind(styles);\n\nexport default function DropZone() {\n    const onDrop = useCallback(acceptedFiles => {\n        acceptedFiles.forEach(file => addFile(file))\n    }, []);\n\n    const {isDragAccept, isDragReject, isDragActive, getRootProps, getInputProps} = useDropzone({\n        onDrop,\n        multiple: false,\n        accept: Object.values(Processors).map(p => p.MIME),\n    });\n\n    const {addFile} = useContext(FileContext);\n\n    const dragClass = cx({\n        'welcome': true,\n        'welcomeActive': isDragActive,\n        'welcomeActiveRej': isDragReject,\n    });\n\n    return (\n        <div {...getRootProps()} className={dragClass}>\n            <input {...getInputProps()} />\n\n            {(isDragAccept && !isDragReject) && (<p>Ok, now release mouse</p>)}\n            {isDragReject && (<p>This ain't no .edoc</p>)}\n            {!isDragActive && (<p>Click here or drop .edoc</p>)}\n        </div>\n    )\n}","import React from \"react\";\nimport FileContext from \"../contexts/FileContext\";\nimport * as JSZip from \"jszip\";\n\nexport default class FileProvider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onAddFile = this.onAddFile.bind(this);\n    }\n\n    state = {\n        files: {}\n    };\n\n    async getZip(file, buffer) {\n        const zip = new JSZip();\n        await zip.loadAsync(buffer);\n        const files = zip.file(/.+\\.(docx|doc|odt|pdf|rtf|txt|xps)/);\n\n        for (const f of files) {\n            const content = await f.async(\"string\");\n            // const processed = processSlide(content);\n            // await zip.file(f.name, processed);\n            // console.log(f);\n            const elem = window.document.createElement('a');\n            const bl = new File([await new Response(content).arrayBuffer()], f.name);\n            elem.href = window.URL.createObjectURL(bl);\n            elem.download = f.name;\n            document.body.appendChild(elem);\n            elem.click();\n            document.body.removeChild(elem);\n\n            this.state.files[file.name].files = {\n                file: f.name,\n                href: window.URL.createObjectURL(bl),\n            };\n        }\n    }\n\n    onAddFile(file) {\n        this.setState({\n            // files: this.state.files.concat(Object.assign(file, {stage: \"processing...\"}))\n            files: Object.assign(this.state.files, {[file.name]: Object.assign(file, {stage: \"processing...\"})})\n        });\n\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log('file reading was aborted');\n        reader.onerror = () => console.log('file reading has failed');\n        reader.onload = async () => {\n            const buf = reader.result;\n            console.log(\"processing...\");\n            await this.getZip(file, buf);\n\n            this.setState({\n                files: Object.assign(this.state.files, {[file.name]: Object.assign(file, {stage: \"done\"})})\n            });\n        };\n\n        reader.readAsBinaryString(file);\n    }\n\n    render() {\n        return (\n            <FileContext.Provider\n                value={{\n                    files: this.state.files,\n                    addFile: this.onAddFile,\n                }}\n            >\n                {this.props.children}\n            </FileContext.Provider>\n        )\n    }\n}","import React from 'react';\nimport FileContext from \"../contexts/FileContext\";\n\nexport default class FileView extends React.Component {\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     const files = this.context || [];\n    //     console.log(files);\n    // }\n\n    // render() {\n    //     const files = this.context || [];\n    //     return <ul></ul>;\n    // }\n\n    render() {\n        return (\n            <FileContext.Consumer>\n                {({files}) => (\n                    // <div>{JSON.stringify(files)}</div>\n                    <div></div>\n                )}\n            </FileContext.Consumer>\n        )\n    }\n}\n\nFileView.contextType = FileContext;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport DropZone from \"./components/DropZone\";\nimport FileProvider from \"./providers/FileProvider\"\nimport FileView from \"./components/FileView\";\n\nconst App = () => (\n    <FileProvider>\n        <FileView/>\n        <DropZone/>\n    </FileProvider>\n);\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"_3HOFe\",\"welcomeActive\":\"_17MaC\",\"welcomeActiveRej\":\"URnaD\"};"],"sourceRoot":""}